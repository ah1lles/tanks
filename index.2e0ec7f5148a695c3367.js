(self.webpackChunktanks=self.webpackChunktanks||[]).push([[826],{647:(t,e,s)=>{"use strict";var i=s(3379),h=s.n(i),r=s(5426);h()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var n=s(3220),a=s.n(n),o=s(3311),d=s.n(o),l=s(7361),c=s.n(l);class u{constructor(){return u._instance||(this.cache=[],u._instance=this),u._instance}static getInstance(){return this._instance}async load(t){return this.cache=await Promise.all(a()(t).map((([t,e])=>this.loadItem(t,e))))}loadItem(t,e){return new Promise((s=>{const i=new Image;i.src=e,i.onload=()=>{s({[t]:i})}}))}get(t){return c()(d()(this.cache,t),t)}}const p=32,y=992,m=896,g=864;function x(t,e,s){return function(t,e,s){if(e.set)e.set.call(t,s);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=s}}(t,f(t,e,"set"),s),s}function f(t,e,s){if(!e.has(t))throw new TypeError("attempted to "+s+" private field on non-instance");return e.get(t)}var b=new WeakMap;class w{constructor(){return b.set(this,{writable:!0,value:void 0}),w._instance||(this.ctx=null,x(this,b,!1),w._instance=this),w._instance}static getInstance(){return this._instance}init(){if(function(t,e){return e.get?e.get.call(t):e.value}(this,f(this,b,"get")))return this.ctx;const t=document.createElement("canvas");return t.width=y,t.height=m,this.ctx=t.getContext("2d"),document.body.appendChild(t),x(this,b,!0),this.ctx}}var v=s(2569),S=s.n(v);function k(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,C(t,e,"get"))}function C(t,e,s){if(!e.has(t))throw new TypeError("attempted to "+s+" private field on non-instance");return e.get(t)}var T=new WeakMap;class P{constructor(){return T.set(this,{writable:!0,value:void 0}),P._instance||(e={},function(t,e,s){if(e.set)e.set.call(t,s);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=s}}(t=this,C(t,T,"set"),e),P._instance=this),P._instance;var t,e}static getInstance(){return this._instance}subscribe(t,e){k(this,T)[t]||(k(this,T)[t]=[]),k(this,T)[t].push(e)}dispatch(t,e){const s=k(this,T)[t];s&&s.forEach((s=>s({type:t,data:e})))}unsubscribe(t,e){let s=k(this,T)[t];s=S()(s,e),s.length||delete k(this,T)[t]}}const A=s.p+"045664293dfc82faaa4b87632912c789.mp3",_=s.p+"fb0cb09ed5ee7dfa2f167ac3e472f0c3.mp3",B=s.p+"bc633894543c4eb9e2a9efb9ee06aa50.mp3",E=s.p+"116940a81cfba54d9979055e622d1b81.mp3",L=s.p+"754c4690d25f7901929ed944c4c1288f.mp3",D=s.p+"0246e1effa96d92c5abc5a08e8aea287.mp3",I=s.p+"98691f417fea1c0f8736a8fc9b4b768e.mp3",O=s.p+"b9f50b81dfc46da09b1e987cae3269ea.mp3",q=s.p+"ac336dd10cf66357ba07f2dfceb8db69.mp3",H=s.p+"1d38b7097f7647851e6509bd98c74629.mp3",F=s.p+"c5439878ef49c5d4d40fc45224c601b2.mp3",R=s.p+"626efebec78b5c0145d96d53f0b17710.mp3",M=s.p+"c7bdad24c8d55488cd1e8d15ac20e140.mp3",z=s.p+"3a175b20561962e8d2bfd0261f137a81.mp3",U=s.p+"26b864fd1773793a05f04c615488540a.mp3",G=s.p+"36319aa3dba40c767d6510886029b63e.mp3";class N{constructor(){return N._instance||(this.startLevel=new Audio(A),this.playerShoot=new Audio(_),this.bulletIsOutOfField=new Audio(B),this.enemyDied=new Audio(E),this.shootInArmoredEnemy=new Audio(L),this.playerDied=new Audio(D),this.bonusEnemyHitted=new Audio(I),this.bonusWasTaken=new Audio(O),this.increaseCountOfLives=new Audio(q),this.hitAndDestroyTile=new Audio(H),this.awaitingPlayer=new Audio(F),this.movingPlayer=new Audio(R),this.statsNumCount=new Audio(M),this.playerDefeat=new Audio(z),this.newScore=new Audio(U),this.pausePressed=new Audio(G),this.awaitingPlayer.loop=!0,this.awaitingPlayer.volume=.4,this.movingPlayer.loop=!0,this.movingPlayer.volume=.7,N._instance=this),N._instance}static getInstance(){return this._instance}play(t){this[t].currentTime=0,this[t].play()}pause(t){this[t].pause()}}var W=s(1763),$=s.n(W);class K{constructor(){}get assetsLoader(){return u.getInstance()}get dispatcher(){return P.getInstance()}get ctx(){return w.getInstance().ctx}get audioApi(){return N.getInstance()}after(t,e,s,i,h){let r=!1;const n=(t,...s)=>{n.timeCounter+=t,n.timeCounter>=n.timeDelay&&(i||(n.timeCounter=0),h?r||(r=!0,e(...s)):e(...s))};return n.timeCounter=$()(s)?s:0,n.timeDelay=t,n.resetTime=()=>{n.timeCounter=0},n}}class X{constructor(){}static collision(t,e){return X.collide(t.x,t.y,t.x+t.width,t.y+t.height,e.x,e.y,e.x+e.width,e.y+e.height)}static collide(t,e,s,i,h,r,n,a){return!(s<=h||t>=n||i<=r||e>=a)}static isInField(t){return t.x>=32&&t.y>=32&&t.x+t.width<=g&&t.y+t.height<=864}static setToStorage(t,e){localStorage.setItem(t,JSON.stringify(e))}static getFromStorage(t){const e=localStorage.getItem(t);return e?JSON.parse(e):null}}class Y extends K{constructor(t,e,s,i,h){super(),this.x=t,this.y=e,this.width=s,this.height=i,this.sprites=h,this.dy=0,this.zindex=0,this.idxSprite=0,this.destroyed=!1,this.destroyable=!1,this.passable=!0}get img(){return this.assetsLoader.get(this.currentSprite)}get currentSprite(){return this.sprites[this.idxSprite]}get dx(){return 0}get(){return[this.img,this.dx*this.width,this.dy,this.width,this.height,this.x,this.y,this.width,this.height]}checkFieldEnd(){return X.isInField(this)}render(){this.ctx.save(),this.ctx.drawImage(...this.get()),this.ctx.restore()}destroy(){this.destroyable&&(this.destroyed=!0)}}class Z extends Y{constructor(...t){super(...t),this.type=""}get(){let[t,...e]=super.get();return this.destroyed&&this.destroyable&&(t=this.assetsLoader.get("transparent")),[t,...e]}}const J={1:{instant:class extends Z{constructor(...t){super(...t),this.type="bricks",this.passable=!1,this.destroyable=!0,this._dx=0}get dx(){return this._dx}set dx(t){this._dx=t}destroy(t){const e=t.direction;"player"===t.from&&this.audioApi.play("hitAndDestroyTile"),t.piercing?super.destroy():0===this.dx?("Up"===e&&(this.dx=4),"Right"===e&&(this.dx=1),"Down"===e&&(this.dx=2),"Left"===e&&(this.dx=3)):1===this.dx?("Up"===e&&(this.dx=14),"Right"===e&&super.destroy(),"Down"===e&&(this.dx=11),"Left"===e&&super.destroy()):2===this.dx?("Up"===e&&super.destroy(),"Right"===e&&(this.dx=11),"Down"===e&&super.destroy(),"Left"===e&&(this.dx=12)):3===this.dx?("Up"===e&&(this.dx=13),"Right"===e&&(super.destroy(),this.dx=11),"Down"===e&&(this.dx=12),"Left"===e&&super.destroy()):4===this.dx?("Up"===e&&super.destroy(),"Right"===e&&(this.dx=14),"Down"===e&&super.destroy(),"Left"===e&&(this.dx=13)):11!==this.dx&&12!==this.dx&&13!==this.dx&&14!==this.dx||super.destroy()}},sprites:["bricks"]},2:{instant:class extends Z{constructor(...t){super(...t),this.passable=!1,this.destroyable=!0}destroy(t){t.piercing?("player"===t.from&&this.audioApi.play("hitAndDestroyTile"),super.destroy()):"player"===t.from&&this.audioApi.play("bulletIsOutOfField")}},sprites:["armor"]},3:{instant:class extends Z{constructor(...t){super(...t),this.type="tree",this.zindex=2}destroy(t){"player"===t.from&&this.audioApi.play("hitAndDestroyTile"),this.destroyed=!0}},sprites:["tree"]},4:{instant:class extends Z{constructor(...t){super(...t),this.type="water",this.passable=!1}},sprites:["water"]},5:{instant:class extends Z{constructor(...t){super(...t),this.type="ice"}},sprites:["ice"]}},j={1:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,2,2,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,2,2,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],2:[0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2,3,3,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2,3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0,3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0,0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0,0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0,0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0],3:[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,1,1,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,0,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0,3,3,3,3,3,3,3,3,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,0,0,3,3,3,3,3,3,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,3,3,3,3,3,3,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,3,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,3,3,3,3,3,3,3,3,1,1,0,0,0,0,2,0,0,0,0,0,0,0,1,1,1,1,3,3,3,3,3,3,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,1,1,1,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,1,1,1,1,0,0,2,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,3,3,0,0,2,2,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,2,2,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0],4:[0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2,2,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,4,4,0,0,0,1,0,0,2,0,0,0,2,0,0,0,1,1,1,0,0,0,0,0,0,0,4,4,0,0,0,1,0,0,2,0,0,0,2,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,4,4,4,4,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,4,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,3,3,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,3,3,3,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,3,3,3,3,2,2,3,3,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,3,3,3,2,2,2,2,3,3,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,3,3,3,2,2],5:[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,4,4,4,4,0,0,4,4,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,4,4,4,4,0,0,4,4,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,4,4,4,4,4,4,0,0,1,1,1,1,0,0,0,0,1,1,0,0,4,4,4,4,0,0,4,4,4,4,4,4,0,0,1,1,1,1,1,1,1,1,0,0,0,0,4,4,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,4,4,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,4,4,4,4,4,4,0,0,4,4,0,0,2,2,0,0,1,1,0,0,0,2,0,0,0,0,4,4,4,4,4,4,0,0,4,4,0,0,2,2,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],6:[0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,0,0,0,0,0,0,0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,3,3,1,0,0,1,3,3,0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,3,3,1,0,0,1,3,3,0,0,1,0,0,2,0,0,1,0,0,0,1,1,0,0,0,1,3,3,1,0,0,1,3,3,0,0,1,0,0,2,0,0,1,0,0,0,1,1,0,0,0,1,3,3,1,0,0,1,3,3,0,0,1,1,0,0,0,0,1,1,0,0,2,2,0,0,1,1,3,3,0,0,1,1,3,3,0,0,1,1,0,0,0,0,1,1,0,0,2,2,0,0,1,1,3,3,0,0,1,1,3,3,0,0,0,0,0,0,0,1,2,2,0,0,1,1,0,0,1,1,2,0,0,0,3,3,3,3,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,2,0,0,0,3,3,3,3,1,1,1,1,1,0,0,0,0,0,3,3,1,1,3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,3,3,1,1,3,3,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,0,0,1,1,3,3,3,3,3,3,1,1,0,1,1,1,1,1,2,2,2,2,1,1,1,1,0,0,0,0,3,3,3,3,3,3,0,0,0,1,1,1,1,1,2,2,2,2,2,2,2,2,0,0,0,0,0,0,3,3,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,1,1,0,0,3,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,1,3,3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,3,3,3,3],7:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,0,0,0,0,2,2,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,3,3,2,2,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0,3,3,2,2,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,2,0,0,3,3,2,2,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,2,2,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,2,2,0,0,0,0,0,2,0,0,0,0,0,2,2,2,0,0,0,0,0,0,2,2,2,2,3,3,0,0,0,0,2,2,0,0,0,0,0,2,2,2,0,0,0,0,0,0,2,2,2,2,3,3,0,0,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,2,2,2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,3,3,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],8:[0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,3,3,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,3,3,1,1,1,1,1,1,0,0,1,1,0,0,2,2,0,0,1,1,1,0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,3,3,1,1,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,3,3,1,1,2,2,2,2,1,1,0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,2,2,0,0,3,3,3,3,3,3,3,3,0,0,0,0,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4,3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,3,3,3,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,1,1,1,1,0,0,3,3,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,3,3,2,2,1,1,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0],9:[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,2,2,2,2,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,2,2,2,2,0,0,0,1,1,0,0,0,0,0,0,0,0,3,3,0,2,2,2,2,0,0,0,2,2,3,3,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,2,2,2,2,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,2,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,0,0,2,2,1,1,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,1,1,2,2,2,2,1,1,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,1,1,2,2,0,0,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,0,0,1,1,1,1,0,0,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,0,0,1,1,1,1,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,1,1,1,1,0,0,0,0,3,3,0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0],10:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,0,3,3,3,3,0,0,1,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0,0,3,3,3,3,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,3,3,2,2,2,2,3,3,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,3,3,2,2,2,2,3,3,1,1,1,0,0,0,1,1,0,1,0,0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,0,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,0,0,1,1,1,1,1,1,2,2,2,2,1,1,2,2,2,2,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,2,1,1,2,2,2,2,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,2,2,0,0,1,1,0,0,2,2,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,2,2,0,0,1,1,0,0,2,2,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,3,3,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,3,3,1,1,1,1,3,3,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,3,3,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,0,1,1,1,1,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0],11:[0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,1,0,0,3,3,3,3,3,3,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,1,0,0,3,3,3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,3,3,3,3,3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,3,3,3,3,3,3,3,3,0,0,0,1,0,0,1,1,1,1,1,1,2,2,1,1,1,1,3,3,3,3,1,1,2,2,0,0,0,1,0,0,1,1,1,1,1,1,2,2,1,1,1,1,3,3,3,3,0,0,2,2,0,0,1,1,1,1,1,1,2,2,0,0,0,0,1,1,0,0,3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,0,0,3,3,3,3,0,0,0,1,0,1,1,1,1,1,1,1,0,0,2,2,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,1,1,1,1,1,1,1,0,0,2,2,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,1,1,0,0,2,2,1,1,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,1,1,0,0,2,2,1,1,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,1,1,0,0,0,1,1,1,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,3,3,3,3,0,0,0,0,0,0,0,0,2,2,1,1,1,1,1,1,0,0,0,0,1,1,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,3,3,3,3,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,3,3,3,3,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,3,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],12:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,4,4,4,4,4,4,4,4,4,4,0,0,1,1,1,0,0,0,0,0,1,1,2,2,0,0,4,4,4,4,4,4,4,4,4,4,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,1,1,0,0,2,2,2,0,1,1,0,0,0,0,0,0,2,2,2,2,2,2,4,4,0,0,1,1,0,0,2,2,2,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,4,4,4,4,4,4,0,0,4,4,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,4,4,4,4,4,4,0,0,4,4,1,1,1,1,0,0,0,0,0,0,0,0,0,0,2,2,4,4,0,0,0,0,0,0,4,4,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,4,4,0,0,0,0,0,0,4,4,0,0,0,0,0,0,4,4,4,4,4,4,0,0,4,4,4,4,1,1,1,1,0,0,4,4,0,0,0,0,0,0,4,4,4,4,4,4,0,0,4,4,4,4,1,1,1,1,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,0,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,4,4,4,4,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,2,2,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],13:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0,1,0,3,3,0,0,2,2,0,0,3,3,0,1,0,0,2,2,1,1,0,0,1,1,0,0,1,0,3,3,2,2,2,2,2,2,3,3,0,1,0,0,2,2,1,1,0,0,1,1,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,2,2,1,1,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,1,1,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,1,1,1,1,1,1,2,2,0,0,1,0,3,3,2,2,2,2,2,2,3,3,0,1,0,0,1,1,0,0,1,1,2,2,0,0,1,0,3,3,0,0,2,2,0,0,3,3,0,1,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,2,2,0,0,1,1,2,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,2,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0]};var Q=s(1966),V=s.n(Q),tt=s(3105),et=s.n(tt);class st extends Y{constructor(t,...e){super(...e),this.speed=t||100,this.type="",this._x=this.x,this._y=this.y,this.direction="Down",this.imgPositions={Up:0,Right:1,Down:2,Left:3},this.upgrade=0,this.idxSprite=0,this.shootDelay=50,this.nextShootTime=50,this.nextShootCoef=200,this.dischargeTime=50,this.dischargeCoef=180,this.bulletsCount=0,this.maxBullets=1,this.bulletType="slow",this.canTakeBonus=!1,this.bulletPiercing=!1,this.destroyed=!1,this.destroyable=!0,this.passable=!1,this.appearing=!0,this.frozen=!1,this.indestructible=!1,this.helmetsCount=0,this.zindex=1}get dx(){return this.imgPositions[this.direction]}get maxBullets(){return this.upgrade>1?2:1}set maxBullets(t){}get bulletType(){return this.upgrade>0?"fast":"slow"}set bulletType(t){}get bulletPiercing(){return this.upgrade>2}set bulletPiercing(t){}get canDestroyTrees(){return this.upgrade>3}set canDestroyTrees(t){}get nextShootCoef(){return this.upgrade>1?300:200}set nextShootCoef(t){}get dischargeCoef(){return this.upgrade>1?220:180}set dischargeCoef(t){}canShoot(){return this.bulletsCount<this.maxBullets&&this.nextShootTime>=this.shootDelay&&this.dischargeTime>=this.shootDelay&&!this.destroyed}shoot(){this.canShoot()&&(this.createBullet(),this.addBullet())}createBullet(){this.dispatcher.dispatch("createBullet",{...this.getBulletStartPosition(),host:this,from:this.bulletFrom,type:this.bulletType,piercing:this.bulletPiercing,canDestroyTrees:this.canDestroyTrees,direction:this.direction})}addBullet(){this.bulletsCount<this.maxBullets&&(this.nextShootTime=0,this.bulletsCount++)}shouldDischarge(){return 0===this.bulletsCount}removeBullet(){this.bulletsCount>0&&(this.bulletsCount--,this.shouldDischarge()&&(this.dischargeTime=0))}createExplosion(){this.dispatcher.dispatch("createExplosion",{framesCount:8,x:this.x-p,y:this.y-p,width:128,height:128,sprites:["explosion2"]})}getBulletStartPosition(){let t,e;switch(this.direction){case"Up":t=this.x+this.width/2-8,e=this.y-16;break;case"Down":t=this.x+this.width/2-8,e=this.y+this.height;break;case"Right":t=this.x+this.width,e=this.y+this.height/2-8;break;case"Left":t=this.x-16,e=this.y+this.height/2-8}return{x:t,y:e}}balancePosition(){this.x=Math.round(this.x/p)*p,this.y=Math.round(this.y/p)*p}changeDirection(t){this.direction!==t&&this.balancePosition(),this.direction=t}checkCollission(t,e,s,i,h){return X.collide(t,e,s,i,h.x,h.y,h.x+h.width,h.y+h.height)}checkTilesCollision(t){return!!d()(t,(t=>X.collision(t,this)))}checkHeadquartersCollision(t){return t&&!t.destroyed&&X.collision(t,this)}checkOtherTanksCollision(t,e){let s=this.x,i=this.y,h=this.x+this.width,r=this.y+this.height;return!!d()(et()(V()(t,[this]),{appearing:!1}),(t=>"Up"===this.direction?this.checkCollission(s,i-2*e,h,r,t):"Right"===this.direction?this.checkCollission(s+2*e,i,h,r,t):"Left"===this.direction?this.checkCollission(s-2*e,i,h,r,t):"Down"===this.direction?this.checkCollission(s,i+2*e,h,r,t):void 0))}reactOnCollidion(t){this.balancePosition()}upgradeTank(){this.canTakeBonus&&this.upgrade++}maxUpgradeTank(){this.canTakeBonus&&(this.upgrade=4)}increaseAmountOfLives(){}freezeTank(){this.frozen=!0}unfreezeTank(){this.frozen=!1}makeTankIndestructible(){this.helmetsCount++,this.helmetsCount>0&&(this.indestructible=!0)}makeTankDestructible(){this.helmetsCount=this.helmetsCount>0?this.helmetsCount-1:0,0===this.helmetsCount&&(this.indestructible=!1)}handleOtherTankCollision(t,e){const s=this.checkOtherTanksCollision(t,e);return s?!this.appearing&&s:(this.appearing=!1,s)}change(t){switch(this.direction){case"Up":this.y-=t;break;case"Right":this.x+=t;break;case"Down":this.y+=t;break;case"Left":this.x-=t}}changePosition(t,e,s,i){if(this.checkTilesCollision(s)||!this.checkFieldEnd()||this.checkHeadquartersCollision(i))return this.balancePosition();let h=this.speed*t;this.handleOtherTankCollision(e,h)?this.reactOnCollidion(t):this.change(h),this._x=this.x,this._y=this.y}update(t,...e){this.frozen||(this.changePosition(t,...e),this.nextShootTime+=this.nextShootCoef*t,this.dischargeTime+=this.dischargeCoef*t)}destroy(){this.indestructible||(super.destroy(),this.createExplosion())}}var it=s(9704),ht=s.n(it),rt=s(2628),nt=s.n(rt),at=s(4721),ot=s.n(at);class dt extends st{constructor(t,e,s,...i){super(...i),this.id=t,this.type="player",this.keys=e,this.lives=s,this.direction="Up",this.upgrade=0,this.maxUpgrade=4,this.keysPressed={},this.appearing=!1,this.bulletFrom="player",this.restoreDelay=1.25,this.isOver=!1,this.canTakeBonus=!0,this.startPositionX=this.x,this.startPositionY=this.y,this.movingSoundEnabled=!1,this.spawnAnimationCreated=!1,this.destroyed=!0,this.score=0,this.pointsForFreeLife=2e4,this.pointsCounter=this.pointsForFreeLife,this.lostControls=!1,this.restore=this.after(this.restoreDelay,(()=>this.restorePlayer())),this.destroying=this.after(3,(()=>this.dispatcher.dispatch("playerDestroyed")),null,!1,!0),document.addEventListener("keydown",(t=>this.keyDownHandler(t.code))),document.addEventListener("keyup",(t=>this.keyUpHandler(t.code)))}get upgrade(){return this.idxSprite}set upgrade(t){this.idxSprite=t>this.maxUpgrade?this.maxUpgrade:t}get nextShootCoef(){return this.upgrade>1?350:400}set nextShootCoef(t){}get dischargeCoef(){return this.upgrade>1?250:400}set dischargeCoef(t){}get lostControls(){return this._lostControls}set lostControls(t){this._lostControls!==t&&t&&(this.audioApi.pause("awaitingPlayer"),this.audioApi.pause("movingPlayer")),this._lostControls===t||t||this.audioApi.play("awaitingPlayer"),this._lostControls=t}keyDownHandler(t){this.checkKey(t)&&!this.lostControls&&("Attack"!==this.keys[t]&&(this.keysPressed[this.keys[t]]=!0),"Down"!==this.keys[t]&&"Up"!==this.keys[t]||(this.keysPressed.Left=!1,this.keysPressed.Right=!1),"Right"!==this.keys[t]&&"Left"!==this.keys[t]||(this.keysPressed.Up=!1,this.keysPressed.Down=!1),"Attack"===this.keys[t]?this.shoot():this.changeDirection(this.keys[t]),this.movingSoundControl())}keyUpHandler(t){this.checkKey(t)&&(this.keysPressed[this.keys[t]]=!1,this.movingSoundControl())}addScore(t){this.score+=t,this.pointsCounter-=t,this.pointsCounter<=0&&(this.pointsCounter=this.pointsForFreeLife,this.increaseAmountOfLives(),this.audioApi.play("increaseCountOfLives"))}movingSoundControl(){this.isPressedMovingKeys()?!this.movingSoundEnabled||this.destroyed||this.isOver||this.lostControls||(this.movingSoundEnabled=!1,this.audioApi.pause("awaitingPlayer"),this.audioApi.play("movingPlayer")):this.movingSoundEnabled||this.destroyed||this.isOver||this.lostControls||(this.movingSoundEnabled=!0,this.audioApi.pause("movingPlayer"),this.audioApi.play("awaitingPlayer"))}createSpawnAnimation(){this.spawnAnimationCreated||(this.spawnAnimationCreated=!0,this.dispatcher.dispatch("createSpawnAnimation",{duration:this.restoreDelay,spped:24,x:this.startPositionX,y:this.startPositionY}))}createBullet(){super.createBullet(),this.audioApi.play("playerShoot")}isPressedMovingKeys(){return ht()(nt()(this.keysPressed))}shouldDischarge(){return this.upgrade>1?super.shouldDischarge()&&this.shootTime>this.shootDelay:super.shouldDischarge()}reactOnCollidion(t){this.isPressedMovingKeys()||super.reactOnCollidion(t)}checkKey(t){return ot()(Object.keys(this.keys),t)}increaseAmountOfLives(){this.lives++}changePosition(...t){this.isPressedMovingKeys()&&super.changePosition(...t)}updateForNewLevel(){this.bulletsCount=0,this.destroyed=!0,this.x=this.startPositionX,this.y=this.startPositionY}restorePlayer(){this.appearing=!0,this.destroyed=!1,this.x=this.startPositionX,this.y=this.startPositionY,this.movingSoundEnabled=!0,this.spawnAnimationCreated=!1,this.dispatcher.dispatch("helmetBonusActivated",{entity:this,duration:3}),this.changeDirection("Up")}update(t,e,s,...i){this.lostControls=!(!e&&s),super.update(t,...i),this.destroyed&&!this.isOver&&s&&(this.createSpawnAnimation(),this.restore(t)),this.isOver&&this.destroying(t)}destroy(){this.indestructible||(super.destroy(),this.audioApi.play("playerDied"),this.audioApi.pause("awaitingPlayer"),this.audioApi.pause("movingPlayer"),this.movingSoundEnabled=!1,0===this.lives?(this.isOver=!0,this.dispatcher.dispatch("setGameOver")):(this.lives--,this.upgrade=0))}}var lt=s(5161),ct=s.n(lt);class ut extends Y{constructor(t,e,s,i,h,r="Up",...n){super(...n),this.host=t,this.from=e,this.type=s,this.piercing=i,this.canDestroyTrees=h||!1,this.direction=r,this.passable=!1,this.destroyable=!0,this.zindex=1}get dx(){switch(this.direction){case"Up":return 0;case"Right":return 1;case"Down":return 2;case"Left":return 3;default:return 0}}get speed(){return"slow"===this.type?450:900}changePosition(t){switch(this.direction){case"Up":this.y-=this.speed*t;break;case"Right":this.x+=this.speed*t;break;case"Down":this.y+=this.speed*t;break;case"Left":this.x-=this.speed*t}}getOtherBullets(t){return et()(V()(t,[this]),(t=>"player"===t.from&&"player"===this.from||t.from!==this.from))}checkOtherBulletsCollision(t){return ht()(ct()(t,(t=>X.collision(t,this))))}checkItemsCollision(t){return ht()(ct()(t,(t=>{const e=X.collision(t,this);return e&&t.destroy(this),e})))}update(t,e,s,i,h,r){let n=!1;this.checkFieldEnd()?(this.checkItemsCollision(e)&&(n=!0),this.canDestroyTrees&&this.checkItemsCollision(r),this.checkOtherBulletsCollision(this.getOtherBullets(t))?n=!0:("player"===this.from&&this.checkItemsCollision([...s,...V()(i,[this.host])])&&(n=!0),"enemy"===this.from&&this.checkItemsCollision(i)&&(n=!0),h&&X.collision(h,this)&&!h.destroyed&&(h.destroy(),n=!0))):("player"===this.from&&this.audioApi.play("bulletIsOutOfField"),n=!0),n&&this.destroy()}destroy(){super.destroy(),this.dispatcher.dispatch("createExplosion",{framesCount:8,x:this.x-1.5*this.width,y:this.y-1.5*this.width,width:64,height:64,sprites:["explosion"]})}}class pt extends Y{constructor(t,e,...s){super(...s),this.idxOfSprite=t,this.idxSpriteTansparent=e,this.showSprite=!1,this.zindex=4,this.finished=!1,this.points=500,this.animation=this.after(.4,(()=>{this.showSprite=!this.showSprite}))}get dx(){return this.showSprite?this.idxSpriteTansparent:this.idxOfSprite}checkOthersCollision(t){const e=d()(t,(t=>t.canTakeBonus&&X.collision(t,this)));e&&this.destroy(e,et()(t,(t=>t.type!==e.type)))}setBunusEffect(){}update(t,e){this.animation(t),this.checkOthersCollision(e)}makeSound(){this.audioApi.play("bonusWasTaken")}destroy(t,e){this.setBunusEffect(t,e),this.makeSound(),"player"===t.type&&(this.dispatcher.dispatch("countPoints",{player:t,points:this.points}),this.dispatcher.dispatch("createPoints",{points:this.points,host:this})),this.finished=!0}}class yt extends pt{constructor(...t){super(...t),this.limit=20}setBunusEffect(t,e){this.dispatcher.dispatch("chovelBonusActivated",{limit:this.limit,host:t})}}class mt extends pt{constructor(...t){super(...t),this.freezeLimit=10}setBunusEffect(t,e){this.dispatcher.dispatch("clockBonusActivated",{limit:this.freezeLimit,entities:e,bonusOwnerType:t.type})}}var gt=s(8894),xt=s.n(gt);class ft extends pt{constructor(...t){super(...t)}setBunusEffect(t,e){xt()(e,"destroy",null,!0)}}class bt extends pt{constructor(...t){super(...t),this.duration=10}setBunusEffect(t,e){this.dispatcher.dispatch("helmetBonusActivated",{entity:t,duration:this.duration})}}class wt extends pt{constructor(...t){super(...t)}makeSound(){this.audioApi.play("increaseCountOfLives")}setBunusEffect(t,e){t.increaseAmountOfLives()}}class vt extends pt{constructor(...t){super(...t)}setBunusEffect(t,e){t.maxUpgradeTank()}}class St extends pt{constructor(...t){super(...t)}setBunusEffect(t,e){t.upgradeTank()}}var kt=s(3608),Ct=s.n(kt),Tt=s(4238),Pt=s.n(Tt);class At extends K{constructor(){super(),this.bonuses={1:{instance:bt,sprite:["bonuses"]},2:{instance:mt,sprite:["bonuses"]},3:{instance:yt,sprite:["bonuses"]},4:{instance:St,sprite:["bonuses"]},5:{instance:ft,sprite:["bonuses"]},6:{instance:wt,sprite:["bonuses"]},7:{instance:vt,sprite:["bonuses"]}}}genarateChance(){return Ct()(100)}getIdxOfNewBonus(){const t=this.genarateChance();return t<=24?4:t<=48?5:t<=60?1:t<=72?2:t<=84?3:t<=96?6:t<=100?7:void 0}generateBonusPosition(){const t=Math.round(Ct()(32,g)/p)*p,e=Math.round(Ct()(32,864)/p)*p;return{x:t>800?800:t,y:e>800?800:e}}getTilesFromHeadquarters(t){return t?[{x:t.x,y:t.y,width:p,height:p},{x:t.x,y:t.y+p,width:p,height:p},{x:t.x+p,y:t.y,width:p,height:p},{x:t.x+p,y:t.y+p,width:p,height:p}]:[]}getBonusTilesPos(t){return[{x:t.x,y:t.y},{x:t.x+p,y:t.y},{x:t.x,y:t.y+p},{x:t.x+p,y:t.y+p}]}getTilesByBonusPos(t,e){return et()(t,(t=>!!d()(e,(e=>e.x===t.x&&e.y===t.y))))}getBonusPosition(t,e){const s=e||{},i=this.generateBonusPosition(),h=this.getBonusTilesPos(i),r=this.getTilesByBonusPos(t,h),n=et()(r,{passable:!1});return 4===Pt()(n)?this.getBonusPosition(t,s):(s.x=i.x,s.y=i.y,s)}create(t,e){const s=this.getIdxOfNewBonus(),i=this.bonuses[s],h=this.getTilesFromHeadquarters(e),r=this.getBonusPosition([...t,...h]);return new i.instance(s,0,r.x,r.y,64,64,i.sprite)}}var _t=s(3674),Bt=s.n(_t),Et=s(7493),Lt=s.n(Et);class Dt extends st{constructor(t,e,...s){super(...s),this.bonus=e,this.type="enemy",this.canTakeBonus=t,this._idxSprite=0,this.upgrade=0,this.maxUpgrade=0,this.bulletFrom="enemy",this.idxBonusSprite=this.sprites.length-1,this.showBonusSprite=!1,this.changedBehaviour=!1,this.moving=this.after(5,(()=>this.determineRandomDirection())),this.shooting=this.after(.5,(()=>this.shoutingDecision())),this.bonusAnimation=this.after(.2,(()=>{this.showBonusSprite=!this.showBonusSprite})),this.deadlock=this.after(.3,(()=>this.changeDirectionWhenLocked())),this.lifeToChangeBehaviour=this.after(10,(()=>{this.changedBehaviour=!this.changedBehaviour}),null,!1,!0)}get idxSprite(){return this.showBonusSprite&&this.bonus?this.idxBonusSprite:this._idxSprite}set idxSprite(t){this._idxSprite=t}generateChanceOfChangingDirection(){return Ct()(100)}generateChanceOfShooting(){return Ct()(100)}shoutingDecision(){this.generateChanceOfShooting()<50&&this.shoot()}determineRandomDirection(){this.generateChanceOfChangingDirection()<40&&(this.changeDirection(this.getNewPosition()),this.deadlock.resetTime())}defaultBehaviour(){const t=Lt()(Bt()(this.imgPositions),this.direction);return t[Ct()(Pt()(t)-1)]}advancedBehaviour(){if("Up"===this.direction)return"Down";if("Right"===this.direction){if(this.x<this.headquartersPosition.x)return["Down","Right"][Ct()(1)];if(this.x>this.headquartersPosition.x)return["Down","Left"][Ct()(1)]}if("Left"===this.direction){if(this.x<this.headquartersPosition.x)return["Down","Right"][Ct()(1)];if(this.x>this.headquartersPosition.x)return["Down","Left"][Ct()(1)]}if("Down"===this.direction){if(this.x<this.headquartersPosition.x)return"Right";if(this.x>this.headquartersPosition.x)return"Left"}return this.defaultBehaviour()}getNewPosition(){return this.changedBehaviour&&this.headquartersPosition&&Ct()(100)<60?this.advancedBehaviour():this.defaultBehaviour()}createBonus(){this.bonus&&(this.bonus=!1,this.dispatcher.dispatch("createBonus"))}makeBonusSound(){this.bonus&&this.audioApi.play("bonusEnemyHitted")}tankIsLocked(){return this.y<this._y||this.y>this._y||this.x<this._x||this.x>this._x}changeDirectionWhenLocked(t){this.changeDirection(this.getNewPosition()),this.moving.resetTime()}reactOnCollidion(t){super.reactOnCollidion(),this.changeDirectionWhenLocked(t)}getHeadquartersPos(t){this.headquartersPosition=t?{x:t.x,y:t.y}:null}update(t,e,s,i){this.frozen||(super.update(t,e,s,i),this.checkFieldEnd()||this.deadlock(t),this.tankIsLocked()&&this.deadlock(t),this.moving(t),this.shooting(t),this.lifeToChangeBehaviour(t),this.getHeadquartersPos(i),this.bonus&&this.bonusAnimation(t))}destroy(t,e){this.indestructible||(this.makeBonusSound(),this.audioApi.play("enemyDied"),e||this.createBonus(),"player"===t?.from&&(this.dispatcher.dispatch("countPoints",{player:t.host,points:this.points,enemyId:this.enemyId}),this.dispatcher.dispatch("createPoints",{points:this.points,host:this})),this.dispatcher.dispatch("enemyWasDestroyed"),super.destroy())}}class It extends Dt{constructor(...t){super(...t),this.enemyId=1,this.points=Mt[this.enemyId]}}class Ot extends Dt{constructor(...t){super(...t),this.enemyId=2,this.points=Mt[this.enemyId]}}class qt extends Dt{constructor(...t){super(...t),this.enemyId=3,this.upgrade=2,this.points=Mt[this.enemyId]}}var Ht=s(1584),Ft=s.n(Ht);class Rt extends Dt{constructor(...t){super(...t),this.enemyId=4,this._idxSprite=3,this.points=Mt[this.enemyId]}destroy(t,e){this.indestructible||(0===this._idxSprite||Ft()(e)&&e?super.destroy(t,e):(this.makeBonusSound(),this.audioApi.play("shootInArmoredEnemy"),this.createBonus(),this._idxSprite--))}}const Mt={1:100,2:200,3:300,4:400},zt={0:["enemy_1","enemy_1_bonus"],1:["enemy_2","enemy_2_bonus"],2:["enemy_3","enemy_3_bonus"],3:["enemy_4_grade_4","enemy_4_grade_3","enemy_4_grade_2","enemy_4_grade_1","enemy_4_bonus"]};class Ut extends K{constructor(t,e,s){super(),this.hardMode=e,this.creationDelay=2.5,this.spawnAnimationDelay=1.25,this.completeLevelDelay=3,this.spawnAnimationCreated=!1,this.allEnemiesWereDestroyed=!1,this.enemiesCount=0,this.destroyedEnemyCount=0,this.currentEnemyIndex=0,this.level=s||1,this.maxEnemies=20,this.maxLivingEnemies=e?6:t||4,this.currentSpot=1,this.spots={0:{x:p,y:p},1:{x:416,y:p},2:{x:800,y:p}},this.bonusTanks=[3,10,17],this.levelEnemiesSequence={1:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],2:[3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],3:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,3,3],4:[2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,0,3,3,3],5:[2,2,2,2,2,3,3,0,0,0,0,0,0,0,0,1,1,1,1,1],6:[2,2,2,2,2,2,2,1,1,0,0,0,0,0,0,0,0,0,3,3],7:[0,0,0,1,1,1,1,2,2,2,2,2,2,0,0,0,0,3,3,3],8:[2,2,2,2,2,2,2,2,1,1,1,1,0,0,0,0,0,3,3,3],9:[0,0,0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,3,3,3],10:[0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2,3,3],11:[1,1,1,1,1,3,3,3,3,3,2,2,2,2,2,1,1,1,1,1],12:[2,2,2,2,2,2,1,1,1,1,1,3,3,3,3,3,3,2,2,2],13:[2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,3,3,3,3]},this.enemiesClasses={0:It,1:Ot,2:qt,3:Rt},this.creationSpawnAnimation=this.after(this.spawnAnimationDelay,(()=>this.createSpawnAnimation()),this.spawnAnimationDelay),this.creationEnemy=this.after(this.creationDelay,(()=>this.createEnemy()),this.spawnAnimationDelay),this.allEnemiesDestroyed=this.after(this.completeLevelDelay,(()=>{this.allEnemiesWereDestroyed=!1,this.dispatcher.dispatch("levelCompleted")})),this.handlerEnemyDestroying=()=>{this.destroyedEnemyCount++,this.allEnemiesWereDestroyed=this.destroyedEnemyCount>=this.maxEnemies},this.dispatcher.subscribe("enemyWasDestroyed",this.handlerEnemyDestroying)}createSpawnAnimation(){this.spawnAnimationCreated=!0,this.dispatcher.dispatch("createSpawnAnimation",{duration:this.spawnAnimationDelay,spped:24,x:this.spots[this.currentSpot].x,y:this.spots[this.currentSpot].y})}createEnemy(){const t=this.levelEnemiesSequence[this.level][this.currentEnemyIndex];this.dispatcher.dispatch("createEnemy",new this.enemiesClasses[t](this.hardMode,ot()(this.bonusTanks,this.currentEnemyIndex),1===t?200:100,this.spots[this.currentSpot].x,this.spots[this.currentSpot].y,64,64,zt[t])),this.currentEnemyIndex++,this.currentSpot=this.currentSpot<2?this.currentSpot+1:0,this.spawnAnimationCreated=!1}update(t,e){Pt()(e)<this.maxLivingEnemies&&this.currentEnemyIndex<this.maxEnemies&&(this.spawnAnimationCreated||this.creationSpawnAnimation(t),this.creationEnemy(t)),this.allEnemiesWereDestroyed&&this.allEnemiesDestroyed(t)}destroy(){this.dispatcher.unsubscribe("enemyWasDestroyed",this.handlerEnemyDestroying)}}class Gt extends Y{constructor(t,e,s,i,...h){super(...h),this.speed=e||16,this.isInfinity=s||!1,this.framesCount=t,this.duration=i??10,this.animationTime=0,this.lifeTime=0,this.zindex=3,this.finished=!1}get dx(){const t=Math.floor(this.animationTime)%this.framesCount;return this.isInfinity?t>this.framesCount?0:t:this.animationTime>this.framesCount?this.framesCount:t}get(){let[t,...e]=super.get();return this.finished&&(t=this.assetsLoader.get("transparent")),[t,...e]}update(t){this.animationTime+=this.speed*t,this.lifeTime+=t,(!this.isInfinity&&Math.floor(this.animationTime)>=this.framesCount||this.isInfinity&&this.lifeTime>this.duration)&&this.destroy()}destroy(){this.finished=!0}}class Nt extends Gt{constructor(t,...e){super(...e),this.host=t,this.speed=1.5*this.speed,this.host?.makeTankIndestructible()}update(t){this.x=this.host.x,this.y=this.host.y,super.update(t)}destroy(){super.destroy(),this.host?.makeTankDestructible()}}class Wt extends Y{constructor(...t){super(416,800,64,64,["headquarters"]),this.destroyable=!0,this.passable=!1,this.gainHeadquarters=!1,this.savedHeadquartersTiles=[],this.newHeadquartersTiles=[],this.defensiveTiles=[{x:this.x-p,y:this.y+p},{x:this.x-p,y:this.y},{x:this.x-p,y:this.y-p},{x:this.x,y:this.y-p},{x:this.x+p,y:this.y-p},{x:this.x+64,y:this.y-p},{x:this.x+64,y:this.y},{x:this.x+64,y:this.y+p}],this.destroying=this.after(3,(()=>this.dispatcher.dispatch("headquartersDestroyed")),null,!1,!0),this.dispatchingGameOver=this.after(.1,(()=>this.dispatcher.dispatch("setGameOver")),null,!1,!0),this.handleChovelBonusActivation=({data:t})=>{this.activateChovelBonus(t)},this.dispatcher.subscribe("chovelBonusActivated",this.handleChovelBonusActivation)}get dx(){return this.destroyed?1:0}createExplosion(){this.dispatcher.dispatch("createExplosion",{framesCount:8,x:this.x-p,y:this.y-p,width:128,height:128,sprites:["explosion2"]})}compareTilesByPosition(t,e){return!!d()(e,(e=>e.x===t.x&&e.y===t.y))}activateChovelBonus({limit:t,host:e}){Pt()(this.newHeadquartersTiles)>0&&this.dispatcher.dispatch("returnBackHeadquartersTiles",{oldTiles:[],newTiles:this.newHeadquartersTiles}),"player"===e.type?this.newHeadquartersTiles=ct()(this.defensiveTiles,(t=>new J[2].instant(t.x,t.y,p,p,J[2].sprites))):this.newHeadquartersTiles=[],this.dispatcher.dispatch("buildNewHeadquartersTiles",{oldTiles:this.savedHeadquartersTiles,newTiles:this.newHeadquartersTiles}),this.gainHeadquarters=!0,this.activation=this.after(t,(()=>this.returnBack()))}returnBack(){this.gainHeadquarters=!1,this.dispatcher.dispatch("returnBackHeadquartersTiles",{oldTiles:this.savedHeadquartersTiles,newTiles:this.newHeadquartersTiles}),this.savedHeadquartersTiles=[],this.newHeadquartersTiles=[]}update(t,e){this.gainHeadquarters?this.activation(t):this.savedHeadquartersTiles=et()(e,(t=>this.compareTilesByPosition(t,this.defensiveTiles))),this.destroyed&&(this.dispatchingGameOver(t),this.destroying(t))}destroy(){super.destroy(),this.createExplosion(),this.audioApi.play("playerDied"),this.passable=!0}resetSubscription(){this.dispatcher.unsubscribe("chovelBonusActivated",this.handleChovelBonusActivation)}}class $t extends Gt{constructor(...t){super(...t),this.zindex=0}}class Kt extends K{constructor(){super(),this.currentLabel=0,this.hardMode=!1,this.playersCount=1,this.labels=[{x:400,y:500,name:"playersCount",value:1,text:()=>"1 player"},{x:400,y:600,name:"playersCount",value:2,text:()=>"2 player"},{x:400,y:700,name:"hardMode",value:null,text:()=>"hard-mode: "+(this.hardMode?"on":"off")}],this.pointer={x:300,y:this.labels[this.currentLabel].y,width:64,height:64},this.logo={x:230,y:150,width:540,height:210},this.keyDownHandler=({code:t})=>{switch(t){case"ArrowDown":this.currentLabel=this.currentLabel<Pt()(this.labels)-1?this.currentLabel+1:this.currentLabel;break;case"ArrowUp":this.currentLabel=this.currentLabel>0?this.currentLabel-1:0;break;case"Enter":const t=this.labels[this.currentLabel];"hardMode"===t.name?this.hardMode=!this.hardMode:"playersCount"===t.name&&(this.playersCount=t.value,this.dispatcher.dispatch("getStartSettings",{playersCount:this.playersCount,hardMode:this.hardMode}))}},document.addEventListener("keydown",this.keyDownHandler)}renderLogo(){this.ctx.drawImage(this.assetsLoader.get("battle_city"),this.logo.x,this.logo.y,this.logo.width,this.logo.height)}drawBackground(){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,y,m)}renderLabels(){this.labels.forEach((t=>{this.ctx.fillStyle="white",this.ctx.font="42px sans-serif",this.ctx.fillText(t.text(),t.x,t.y)}))}renderPointer(){this.ctx.drawImage(this.assetsLoader.get("tank_1"),this.pointer.width,0,64,64,this.pointer.x,this.labels[this.currentLabel].y-48,this.pointer.width,this.pointer.height)}render(){this.drawBackground(),this.renderLogo(),this.renderLabels(),this.renderPointer()}update(t){}destroy(){document.removeEventListener("keydown",this.keyDownHandler)}}class Xt extends K{constructor(t,e){super(),this.canChangeLevel=t||!1,this.level=e,this.startGame=!this.canChangeLevel,this.soundLauched=!1,this.starting=this.after(1.5,(()=>{this.startGame=!1,this.dispatcher.dispatch("chooseLevel",{level:this.level})})),this.keyDownHandler=({code:t})=>{this.startGame||("ArrowRight"===t&&(this.level=this.level<Pt()(j)?this.level+1:Pt()(j)),"ArrowLeft"===t&&(this.level=this.level>1?this.level-1:1),"Enter"!==t||this.startGame||(this.startGame=!0,this.makeSound()))},this.startGame&&this.makeSound(),document.addEventListener("keydown",this.keyDownHandler)}makeSound(){this.soundLauched||(this.audioApi.play("startLevel"),this.soundLauched=!0)}render(){this.ctx.fillStyle="#747474",this.ctx.fillRect(0,0,y,m),this.ctx.fillStyle="black",this.ctx.font="bold 42px sans-serif",this.ctx.fillText(`Level ${this.level}`,432,448)}update(t){this.startGame&&this.starting(t)}destroy(){document.removeEventListener("keydown",this.keyDownHandler)}}class Yt extends K{constructor(){super(),this.playersCount=1,this.lavelInfo={img:{x:896,y:736,width:64,height:64},value:{x:938,y:822}},this.livesInfo=[{text:{x:896,y:534},img:{x:896,y:544,width:p,height:p},value:{x:933,y:571}},{text:{x:896,y:630},img:{x:896,y:640,width:p,height:p},value:{x:933,y:667}}]}renderText(t,e,s,i,h){this.ctx.fillStyle=i||"black",this.ctx.font=h||"bold 32px sans-serif",this.ctx.fillText(t,e,s)}renderImg(t,e,s,i,h){this.ctx.drawImage(this.assetsLoader.get(t),e,s,i,h)}renderLevelInfo(){this.renderText(this.level,this.lavelInfo.value.x,this.lavelInfo.value.y),this.renderImg("level_icon",this.lavelInfo.img.x,this.lavelInfo.img.y,this.lavelInfo.img.width,this.lavelInfo.img.height)}renderLivesInfo(){this.playersLives.forEach(((t,e)=>{const s=this.livesInfo[e];this.renderText(`${e+1} P`,s.text.x,s.text.y),this.renderImg("lives_icon",s.img.x,s.img.y,s.img.width,s.img.height),this.renderText(t,s.value.x,s.value.y)}))}render(){this.renderLevelInfo(),this.renderLivesInfo()}update(t,e,s){this.playersLives=ct()(e,"lives"),this.level=s}}var Zt=s(3857),Jt=s.n(Zt);class jt extends K{constructor(){super(),this.store={},this.handleCountPoints=({data:t})=>{if(t.player.addScore(t.points),t.enemyId){const e=c()(this.store,`${this.level}.${t.player.id}.${t.enemyId}`)||0;this.store=Jt()(this.store,{[this.level]:{[t.player.id]:{[t.enemyId]:e+1}}})}},this.dispatcher.subscribe("countPoints",this.handleCountPoints)}getStats(){return this.store}update(t,e){this.level=e}destroy(){this.dispatcher.unsubscribe("countPoints",this.handleCountPoints)}}class Qt extends Y{constructor(t,...e){super(...e),this.points=t,this.zindex=2,this.showing=this.after(1,(()=>this.destroy()))}render(){this.ctx.fillStyle="white",this.ctx.font="26px sans-serif",this.ctx.fillText(this.points,this.x+10,this.y+p+10)}update(t){this.showing(t)}destroy(){this.destroyed=!0}}var Vt=s(1175),te=s.n(Vt),ee=s(2297),se=s.n(ee),ie=s(7287),he=s.n(ie),re=s(711),ne=s.n(re),ae=s(1609),oe=s.n(ae);class de extends K{constructor(t,e,s){super(),this.playersIds=ct()(s,"id").sort(),this.stats=oe()(t)?{[e]:he()(this.playersIds,ct()(this.playersIds,(t=>({}))))}:t,this.level=e,this.playersCount=Pt()(s),this.finish=!1,this.enemiesPoints={...Mt},this.pattern={points:0,enemies:0},this.values=he()(this.playersIds,ct()(this.playersIds,(t=>({})))),this.playersCurrentPoints=he()(this.playersIds,ct()(s,"score")),this.totals=he()(this.playersIds,ct()(this.playersIds,(t=>se()(nt()(this.stats[this.level]&&this.stats[this.level][t]),((t,e)=>t+e))||0))),this.shouldRenderTotals=!1,this.idx=0,this.needToChangeIdx={},this.bestScore=this.getBestScore(),this.row=this.after(1,(t=>this.updateRow(t)),null,!0),this.pointing=this.after(.2,(()=>this.updatePoints()),.2),this.finishing=this.after(3,(()=>this.dispatcher.dispatch("statsScreenFinished")),null,!1,!0)}getBestScore(){return X.getFromStorage("TheBestScore")||0}updateRow(t){this.playersIds.forEach((t=>{this.values[t][this.idx]||(this.values[t][this.idx]={...this.pattern})})),this.playersIds.forEach((t=>{this.stats[this.level]&&this.stats[this.level][t]&&this.stats[this.level][t][this.idx+1]||(this.needToChangeIdx[t]=!0)})),this.pointing(t)}checkRowIndex(){ne()(nt()(this.needToChangeIdx))&&Pt()(nt()(this.needToChangeIdx))===this.playersCount&&(this.row.resetTime(),this.idx++,this.needToChangeIdx={})}checkFinish(){this.idx>Pt()(Bt()(Mt))-1&&(this.shouldRenderTotals=!0,this.finish=!0)}updatePoints(){this.playersIds.forEach((t=>{const e=this.stats[this.level]&&this.stats[this.level][t]&&this.stats[this.level][t][this.idx+1];this.values[t][this.idx].enemies!==e&&e?(this.values[t][this.idx].enemies++,this.values[t][this.idx].points+=Mt[this.idx+1],this.audioApi.play("statsNumCount")):this.needToChangeIdx[t]=!0})),this.checkRowIndex(),this.checkFinish()}renderText(t,e,s,i,h){this.ctx.fillStyle=i||"white",this.ctx.font=h||"32px sans-serif",this.ctx.fillText(t,e,s)}renderBestScore(){this.renderText("The Best Score",250,100,"#de2800"),this.renderText(`${this.bestScore}`,600,100,"#ff9a39")}renderLevel(){this.renderText(`Level ${this.level}`,450,170)}renderPlayers(){this.playersIds.forEach((t=>{this.renderText(`${t} Player`,300*t,250,"#de2800"),this.renderText(`${this.playersCurrentPoints[t]}`,300*t,300,"#ff9a39")}))}renderEnemiesIcons(){let t=250;a()(this.enemiesPoints).forEach((([e,s],i)=>{t+=i+96;const h=this.assetsLoader.get(te()(zt[i])),r=this.assetsLoader.get("arrow_left");if(this.ctx.drawImage(h,0,0,64,64,464,t,64,64),this.ctx.drawImage(r,432,t+16,p,p),this.renderText("points",250,t+p+10),Pt()(this.playersIds)>1){const e=this.assetsLoader.get("arrow_right");this.ctx.drawImage(e,528,t+16,p,p),this.renderText("points",650,t+p+10)}}))}renderTotal(){this.renderText("Total",460,800),this.shouldRenderTotals&&this.playersIds.forEach((t=>{this.renderText(`${this.totals[t]}`,1===t?380:590,800)}))}renderParticularEnemyCount(){let t=295;const e={1:{pointsX:120,enemiesX:380},2:{pointsX:820,enemiesX:590}};this.playersIds.forEach((s=>{t=295,a()(this.values[s]).forEach((([i,h],r)=>{t+=r+96,this.renderText(`${h.points}`,e[s].pointsX,t),this.renderText(`${h.enemies}`,e[s].enemiesX,t)}))}))}render(){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,y,m),this.renderBestScore(),this.renderLevel(),this.renderPlayers(),this.renderEnemiesIcons(),this.renderTotal(),this.renderParticularEnemyCount()}update(t){this.finish&&this.finishing(t),this.idx<Pt()(Bt()(Mt))&&!this.finish&&this.row(t,t)}}class le extends K{constructor(){super(),this.soundLauched=!1,this.finishing=this.after(3,(()=>this.compare()),null,!1,!0)}makeSound(){this.soundLauched||(this.audioApi.play("playerDefeat"),this.soundLauched=!0)}getLastBestScore(){return X.getFromStorage("TheBestScore")}setUpNewScore(t){X.setToStorage("TheBestScore",t||0)}countPlayersScore(t){this.score=se()(ct()(t,"score"))}compare(){const t=this.getLastBestScore();!t||this.score>t?(this.setUpNewScore(this.score),this.dispatcher.dispatch("newScoreScreen",{score:this.score})):this.dispatcher.dispatch("startScreen")}render(){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,y,m),this.ctx.drawImage(this.assetsLoader.get("you_died"),300,300,385,237)}update(t,e){this.finishing(t),this.makeSound(),this.countPlayersScore(e)}}class ce extends K{constructor(t){super(),this.lifeTime=9,this.score=t,this.soundLauched=!1,this.finishing=this.after(9,(()=>this.dispatcher.dispatch("startScreen")),null,!1,!0),this.title=new Gt(2,null,!0,this.lifeTime,200,200,588,82,["new_score_title"]),this.symbols=[],this.symbolsMap={0:{width:78,height:82},1:{width:48,height:82},2:{width:64,height:82},3:{width:64,height:82},4:{width:80,height:82},5:{width:64,height:82},6:{width:74,height:82},7:{width:72,height:82},8:{width:74,height:82},9:{width:72,height:82}},this.buildSymbols()}buildSymbols(){let t=300;this.symbols=ct()(this.score.toString().split(""),(e=>{const s=this.symbolsMap[e],i=new Gt(2,null,!0,this.lifeTime,t,400,s.width,s.height,[`symbol_${e}`]);return t+=s.width+5,i}))}makeSound(){this.soundLauched||(this.audioApi.play("newScore"),this.soundLauched=!0)}render(t){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,y,m),this.title.render(t),xt()(this.symbols,"render",t)}update(t){this.title.update(t),xt()(this.symbols,"update",t),this.finishing(t),this.makeSound()}}class ue extends K{constructor(t,e){super(),this.text=t||"",this.shift=e||100,this.color="#b02203"}renderText(t,e,s,i){this.ctx.font=i||"bold 42px sans-serif",this.ctx.shadowColor="black",this.ctx.shadowBlur=7,this.ctx.lineWidth=5,this.ctx.strokeText(t,e,s),this.ctx.shadowBlur=0,this.ctx.fillStyle=this.color,this.ctx.fillText(t,e,s)}render(t){this.renderText(this.text,496-this.shift,428)}}class pe extends K{constructor(){super(),this.score=0,this.finishing=this.after(3,(()=>this.compare()),null,!1,!0)}getLastBestScore(){return X.getFromStorage("TheBestScore")}setUpNewScore(t){X.setToStorage("TheBestScore",t||0)}countPlayersScore(t){this.score=se()(ct()(t,"score"))}compare(){const t=this.getLastBestScore();!t||this.score>t?(this.setUpNewScore(this.score),this.dispatcher.dispatch("newScoreScreen",{score:this.score})):this.dispatcher.dispatch("startScreen")}render(t){this.ctx.fillStyle="#000",this.ctx.fillRect(0,0,y,m),this.ctx.drawImage(this.assetsLoader.get("the_end"),260,370,450,90)}update(t,e){this.finishing(t),this.countPlayersScore(e)}}var ye=s(9734),me=s.n(ye),ge=s(7043),xe=s.n(ge),fe=s(8125),be=s.n(fe);const we={tank_1:s(1152),tank_2:s(9511),tank_3:s(4026),tank_4:s(2961),tank_5:s(1597),tank2_1:s(9107),tank2_2:s(4134),tank2_3:s(355),tank2_4:s(8588),tank2_5:s(1318),enemy_1:s(3933),enemy_2:s(9810),enemy_3:s(5620),enemy_4_grade_1:s(2071),enemy_4_grade_2:s(8473),enemy_4_grade_3:s(2290),enemy_4_grade_4:s(443),enemy_1_bonus:s(5329),enemy_2_bonus:s(4641),enemy_3_bonus:s(2368),enemy_4_bonus:s(7055),bonuses:s(1442),bricks:s(9301),armor:s(9683),tree:s(2525),water:s(4117),ice:s(7683),transparent:s(6293),level_icon:s(5171),lives_icon:s(3342),enemy_indicator:s(1740),bullet:s(3115),headquarters:s(955),explosion:s(2928),explosion2:s(3109),bonus_animation:s(8498),spawn_animation:s(2720),battle_city:s(5698),arrow_right:s(7623),arrow_left:s(3888),you_died:s(2270),new_score_title:s(3469),the_end:s(2801),symbol_0:s(809),symbol_1:s(5993),symbol_2:s(3454),symbol_3:s(5051),symbol_4:s(556),symbol_5:s(9695),symbol_6:s(1939),symbol_7:s(7741),symbol_8:s(976),symbol_9:s(6958)},ve=new u,Se=new w,ke=(new P,new N,new class extends K{constructor(){super(),this.playerLives=2,this.level=1,this.pause=!1,this.pausePressed=!1,this.lastTime=0,this.playersCount=1,this.players=[],this.tiles=[],this.bullets=[],this.explosions=[],this.enemies=[],this.bonuses=[],this.helmetOverlays=[],this.enemyMarkers=[],this.spawnAnimations=[],this.bonusFactory=null,this.enemyFactory=null,this.headquarters=null,this.startScreen=null,this.levelScreen=null,this.statsScreen=null,this.theEndScreen=null,this.sidebarStats=null,this.hardMode=!1,this.freezeEntities=!1,this.freezingLimit=0,this.freezingTime=0,this.bonusOwnerType=null,this.gameStarted=!1,this.gameOver=!1,this.playersOptions={0:{keys:{ArrowUp:"Up",ArrowRight:"Right",ArrowDown:"Down",ArrowLeft:"Left",Enter:"Attack"},lives:this.playerLives,speed:150,x:288,y:800,width:64,height:64,sprites:["tank_1","tank_2","tank_3","tank_4","tank_5"]},1:{keys:{KeyW:"Up",KeyD:"Right",KeyS:"Down",KeyA:"Left",Space:"Attack"},lives:this.playerLives,speed:150,x:544,y:800,width:64,height:64,sprites:["tank2_1","tank2_2","tank2_3","tank2_4","tank2_5"]}}}init(){document.addEventListener("keydown",(t=>this.keyDownHandler(t.code))),this.dispatcher.subscribe("createBullet",(t=>this.handleBulletCreation(t.data))),this.dispatcher.subscribe("createExplosion",(t=>this.handleExplosionCreation(t.data))),this.dispatcher.subscribe("createEnemy",(t=>this.handleEnemyCreation(t.data))),this.dispatcher.subscribe("createBonus",(t=>this.handleBonusCreation())),this.dispatcher.subscribe("playerDestroyed",(t=>this.handlePlayerOrHeadquartersDestroying())),this.dispatcher.subscribe("headquartersDestroyed",(t=>this.handlePlayerOrHeadquartersDestroying())),this.dispatcher.subscribe("clockBonusActivated",(t=>this.handleClockBonusActivation(t.data))),this.dispatcher.subscribe("helmetBonusActivated",(t=>this.handleHelmetBonusActivation(t.data))),this.dispatcher.subscribe("buildNewHeadquartersTiles",(t=>this.handleUpdateNewHeadquarterTiles(t.data))),this.dispatcher.subscribe("returnBackHeadquartersTiles",(t=>this.handleReturnBackHeadquarterTiles(t.data))),this.dispatcher.subscribe("createSpawnAnimation",(t=>this.handleSpawnAnimationCreation(t.data))),this.dispatcher.subscribe("getStartSettings",(t=>this.handleGetStartSettings(t.data))),this.dispatcher.subscribe("chooseLevel",(t=>this.handleChoosingLevel(t.data))),this.dispatcher.subscribe("statsScreenFinished",(t=>this.handleStatsScreenFinishing())),this.dispatcher.subscribe("levelCompleted",(t=>this.handleLevelCompleted())),this.dispatcher.subscribe("createPoints",(t=>this.handlePointsCreation(t.data))),this.dispatcher.subscribe("startScreen",(t=>this.createStartScreen())),this.dispatcher.subscribe("newScoreScreen",(t=>this.createScoreScreen(t.data))),this.dispatcher.subscribe("setGameOver",(t=>this.checkGameOver())),window.addEventListener("focus",(()=>{this.pause&&!this.pausePressed&&this.gameStarted&&this.pauseGame(!1)})),window.addEventListener("blur",(()=>{!this.pause&&this.gameStarted&&this.pauseGame(!0)})),this.startScreen=new Kt,this.lastTime=Date.now(),this.loop()}createStartScreen(){this.clear(),this.startScreen=new Kt}createScoreScreen({score:t}){this.theEndScreen=null,this.newScoreScreen=new ce(t)}handleGetStartSettings({playersCount:t,hardMode:e}){this.statsPlayers&&this.statsPlayers.destroy(),this.statsPlayers=new jt,this.playersCount=t,this.hardMode=e,this.startScreen.destroy(),this.startScreen=null,this.createPlayers(),this.levelScreen=new Xt(!0,1)}handleChoosingLevel({level:t}){this.level=t,this.start()}handleStatsScreenFinishing(){this.clear(),this.gameOver?this.gameOverScreen=new le:(this.level++,this.level<=Pt()(j)?this.levelScreen=new Xt(!1,this.level):this.theEndScreen=new pe)}start(){this.resetBonuses(),this.clear(),this.players=et()(this.players,{isOver:!1}),this.gameStarted=!0,this.enemyFactory=new Ut(this.playersCount>1?6:4,this.hardMode,this.level),this.bonusFactory=new At,this.headquarters=new Wt,this.sidebarStats=new Yt,this.createTiles(),this.updatePlayersForNewLevel(),this.createPlayerSpawnAnimations(),this.createEnemyMarkers()}clear(){this.tiles=[],this.bullets=[],this.explosions=[],this.enemies=[],this.bonuses=[],this.helmetOverlays=[],this.enemyMarkers=[],this.spawnAnimations=[],this.headquarters?.resetSubscription(),this.headquarters=null,this.statsScreen=null,this.levelScreen?.destroy(),this.levelScreen=null,this.enemyFactory?.destroy(),this.enemyFactory=null,this.gameOverScreen=null,this.newScoreScreen=null,this.gameOverPopup=null,this.theEndScreen=null}handleLevelCompleted(){this.gameOver||(this.clear(),this.gameStarted=!1,this.createStatsScreen())}updatePlayersForNewLevel(){xt()(this.players,"updateForNewLevel")}pauseGame(t){this.pause=t,this.pause?this.pausePressed&&this.audioApi.play("pausePressed"):(this.lastTime=Date.now(),this.loop()),this.pausePopup=this.pause?new ue("PAUSE"):null}keyDownHandler(t){"KeyP"===t&&(this.pausePressed=!this.pausePressed,this.pauseGame(this.pausePressed))}checkGameOver(){(Pt()(et()(this.players,{isOver:!0}))===Pt()(this.players)||this.headquarters.destroyed)&&(this.gameOver=!0,this.gameStarted=!1),this.gameOverPopup=this.gameOver?new ue("Game Over",150):null}handlePlayerOrHeadquartersDestroying(){this.gameOver&&!this.gameStarted&&(this.clear(),this.createStatsScreen())}handleBulletCreation(t){this.bullets.push(this.createBullet(t.host,t.from,t.type,t.piercing,t.canDestroyTrees,t.direction,t.x,t.y,16,16,["bullet"]))}handleExplosionCreation(t){this.explosions.push(this.createExplosion(t.framesCount,t.x,t.y,t.width,t.height,t.sprites))}handleSpawnAnimationCreation(t){this.spawnAnimations.push(new $t(7,t.speed,!0,t.duration,t.x,t.y,64,64,["spawn_animation"]))}handlePointsCreation({points:t,host:e}){this.points.push(new Qt(t,e.x,e.y,e.width,e.height))}handleEnemyCreation(t){t.bonus&&(this.bonuses=[]),this.enemyMarkers=be()(this.enemyMarkers),this.enemies.push(t)}handleBonusCreation(){Pt()(this.bonuses)>0&&(this.bonuses=[]),this.bonuses.push(this.bonusFactory.create(et()(this.tiles,{destroyed:!1}),this.headquarters))}handleClockBonusActivation({limit:t,bonusOwnerType:e}){this.freezeEntities=!0,this.freezingLimit=t,this.bonusOwnerType=e,this.freezing=this.after(t,(t=>{this.freezeEntities=!1,xt()(this[t],"unfreezeTank")}))}resetBonuses(){this.freezeEntities&&this.updateFreezingTime(this.freezingLimit),this.helmetOverlays=[]}resetFreezing(t){this.freezeEntities=!1,xt()(this[t],"unfreezeTank")}updateFreezingTime(t){if(!this.freezeEntities)return;const e="player"===this.bonusOwnerType?"enemies":"players";xt()(this[e],"freezeTank"),this.freezing(t,e)}createStatsScreen(){this.statsScreen||(this.statsScreen=new de(this.statsPlayers.getStats(),this.level,this.players))}createEnemyMarkers(){let t=g,e=32;this.enemyMarkers=ct()(Array(20),((s,i)=>(i%2==0&&(t=g,e+=32),t+=p,new Y(t,e,p,p,["enemy_indicator"]))))}createPlayerSpawnAnimations(){this.players.forEach((t=>this.handleSpawnAnimationCreation({x:t.x,y:t.y,duration:1.25})))}handleHelmetBonusActivation({entity:t,duration:e}){this.helmetOverlays.push(new Nt(t,3,null,!0,e,t.x,t.y,t.width,t.height,["bonus_animation"]))}handleUpdateNewHeadquarterTiles({oldTiles:t,newTiles:e}){this.tiles=xe()(V()(this.tiles,t),e)}handleReturnBackHeadquarterTiles({oldTiles:t,newTiles:e}){this.tiles=xe()(V()(this.tiles,e),t)}createPlayer(t,e,s,i,h,r,n,a,o){return new dt(t,e,s,i,h,r,n,a,o)}createPlayers(){this.players=ct()(Array(2===this.playersCount||1===this.playersCount?this.playersCount:1),((t,e)=>{const s=this.playersOptions[e];return this.createPlayer(e+1,s.keys,s.lives,s.speed,s.x,s.y,s.width,s.height,s.sprites)}))}createTiles(){const t=j[this.level];let e=0,s=0;this.tiles=[],t.forEach(((t,i)=>{i%26==0&&(e=0,s+=p),e+=p,t&&this.tiles.push(new J[t].instant(e,s,p,p,J[t].sprites))}))}createBullet(t,e,s,i,h,r,n,a,o,d,l){return new ut(t,e,s,i,h,r,n,a,o,d,l)}createExplosion(t,e,s,i,h,r){return new Gt(t,null,!1,0,e,s,i,h,r)}updateTiles(){this.tiles=et()(this.tiles,{destroyed:!1})}updateExplosions(t){this.explosions=et()(this.explosions,{finished:!1}),xt()(this.explosions,"update",t)}updatePlayers(t){xt()(this.players,"update",t,this.pause,this.gameStarted,[...this.enemies,...et()(this.players,{destroyed:!1})],et()(this.tiles,{passable:!1,destroyed:!1}),this.headquarters)}updateBullets(t){this.bullets=et()(this.bullets,(t=>(t.destroyed&&t.host?.removeBullet(),!t.destroyed))),xt()(this.bullets,"update",this.bullets,et()(this.tiles,{passable:!1,destroyable:!0,destroyed:!1}),this.enemies,et()(this.players,{destroyed:!1}),this.headquarters,et()(this.tiles,{type:"tree",destroyed:!1})),xt()(this.bullets,"changePosition",t)}updateEnemies(t){this.enemies=et()(this.enemies,{destroyed:!1}),xt()(this.enemies,"update",t,[...this.enemies,...et()(this.players,{destroyed:!1})],et()(this.tiles,{passable:!1,destroyed:!1}),this.headquarters)}updateBonuses(t){this.bonuses=et()(this.bonuses,{finished:!1}),xt()(this.bonuses,"update",t,[...et()(this.enemies,{destroyed:!1}),...et()(this.players,{destroyed:!1})])}updateHelmetOverlays(t){this.helmetOverlays=et()(this.helmetOverlays,{finished:!1}),xt()(this.helmetOverlays,"update",t)}updateHeadquarters(t){this?.headquarters?.update(t,et()(this.tiles,{destroyed:!1}))}updateSpawnAnimations(t){this.spawnAnimations=et()(this.spawnAnimations,{finished:!1}),xt()(this.spawnAnimations,"update",t)}updatePoints(t){this.points=et()(this.points,{destroyed:!1}),xt()(this.points,"update",t)}renderMap(){this.ctx.fillStyle="#747474",this.ctx.fillRect(0,0,y,m),this.ctx.fillStyle="#000",this.ctx.fillRect(32,32,832,832)}update(t){this.updateFreezingTime(t),this.updateTiles(),this.updatePlayers(t),this.updateEnemies(t),this.updateExplosions(t),this.updateBullets(t),this.updateBonuses(t),this.updateHelmetOverlays(t),this.updateHeadquarters(t),this.updateSpawnAnimations(t),this.updatePoints(t),this?.enemyFactory?.update(t,this.enemies),this?.startScreen?.update(t),this?.levelScreen?.update(t),this?.statsPlayers?.update(t,this.level),this?.sidebarStats?.update(t,this.players,this.level),this?.statsScreen?.update(t),this?.gameOverScreen?.update(t,this.players),this?.theEndScreen?.update(t,this.players),this?.newScoreScreen?.update(t)}render(t){this.renderMap(),xt()(me()([...this.tiles,...et()(this.players,{destroyed:!1}),...this.enemies,...this.bullets,...this.explosions,...this.bonuses,...this.helmetOverlays,...this.enemyMarkers,...this.spawnAnimations,...this.points,this.headquarters,this.sidebarStats,this.startScreen,this.levelScreen,this.statsScreen,this.gameOverScreen,this.newScoreScreen,this.pausePopup,this.gameOverPopup,this.theEndScreen],(t=>t&&t.zindex)),"render",t)}loop(){const t=Date.now(),e=(t-this.lastTime)/1e3;this.update(e),this.render(e),this.lastTime=t,this.pause||window.requestAnimationFrame((()=>this.loop()))}});ve.load(we).then((()=>{Se.init(),ke.init()}))},5426:(t,e,s)=>{"use strict";s.d(e,{Z:()=>a});var i=s(4015),h=s.n(i),r=s(3645),n=s.n(r)()(h());n.push([t.id,"body {\n  margin: 0;\n}\ncanvas {\n  margin: auto;\n  display: block;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;AACX;AACA;EACE,YAAY;EACZ,cAAc;AAChB",sourcesContent:["body {\n  margin: 0;\n}\ncanvas {\n  margin: auto;\n  display: block;\n}\n"],sourceRoot:""}]);const a=n},809:(t,e,s)=>{"use strict";t.exports=s.p+"8daa7a5c6713b89e7e18.png"},5993:(t,e,s)=>{"use strict";t.exports=s.p+"dea460103eadb0d9ac1b.png"},3454:(t,e,s)=>{"use strict";t.exports=s.p+"085b3845d2e7213da8d3.png"},5051:(t,e,s)=>{"use strict";t.exports=s.p+"7a52fba5729ef3e4b8c9.png"},556:(t,e,s)=>{"use strict";t.exports=s.p+"c399897842daf20ae84c.png"},9695:(t,e,s)=>{"use strict";t.exports=s.p+"eccd8755058164f16fd4.png"},1939:(t,e,s)=>{"use strict";t.exports=s.p+"5745dd59ec75db2454a9.png"},7741:(t,e,s)=>{"use strict";t.exports=s.p+"714d784b393caeac3e38.png"},976:(t,e,s)=>{"use strict";t.exports=s.p+"85d2a291d7f9f5049332.png"},6958:(t,e,s)=>{"use strict";t.exports=s.p+"40df5e96ad897f1b39b0.png"},9683:(t,e,s)=>{"use strict";t.exports=s.p+"1c2710c22890719b164e.png"},3888:(t,e,s)=>{"use strict";t.exports=s.p+"c997ec1891b79a080a02.png"},7623:(t,e,s)=>{"use strict";t.exports=s.p+"f3c910f6f2697010aeda.png"},5698:(t,e,s)=>{"use strict";t.exports=s.p+"a600cb1ea8864337315e.png"},8498:(t,e,s)=>{"use strict";t.exports=s.p+"4526a876656f7d595434.png"},1442:(t,e,s)=>{"use strict";t.exports=s.p+"96c5fd93070ad4a31ec2.png"},9301:(t,e,s)=>{"use strict";t.exports=s.p+"f7a498cd6bfbb2a20917.png"},3115:(t,e,s)=>{"use strict";t.exports=s.p+"411a595e4526f051285c.png"},3933:(t,e,s)=>{"use strict";t.exports=s.p+"a272305274428639e9e8.png"},5329:(t,e,s)=>{"use strict";t.exports=s.p+"4a457b67cf8bd587dca3.png"},9810:(t,e,s)=>{"use strict";t.exports=s.p+"3d8e0d48100bcb6a7546.png"},4641:(t,e,s)=>{"use strict";t.exports=s.p+"b43b4b15b9f05c9282b3.png"},5620:(t,e,s)=>{"use strict";t.exports=s.p+"0afbe7c7b72aa5138ec9.png"},2368:(t,e,s)=>{"use strict";t.exports=s.p+"0e71bdb035eae5e6fe60.png"},7055:(t,e,s)=>{"use strict";t.exports=s.p+"5108acdfd43c1d5ddaab.png"},2071:(t,e,s)=>{"use strict";t.exports=s.p+"65b0b80d049b40d9a263.png"},8473:(t,e,s)=>{"use strict";t.exports=s.p+"4d4505eaec28f704bfa1.png"},2290:(t,e,s)=>{"use strict";t.exports=s.p+"ba43e421567e8f29edb5.png"},443:(t,e,s)=>{"use strict";t.exports=s.p+"4d32aae15e52af92385e.png"},1740:(t,e,s)=>{"use strict";t.exports=s.p+"5830e8d53d8fab21a556.png"},2928:(t,e,s)=>{"use strict";t.exports=s.p+"a1aed3dc0e166d850c6e.png"},3109:(t,e,s)=>{"use strict";t.exports=s.p+"c67cda5e88e74d4afe62.png"},955:(t,e,s)=>{"use strict";t.exports=s.p+"34c8159fca67cae3c089.png"},7683:(t,e,s)=>{"use strict";t.exports=s.p+"8065b39f6da968ac9216.png"},5171:(t,e,s)=>{"use strict";t.exports=s.p+"181333c88619adf2d7ca.png"},3342:(t,e,s)=>{"use strict";t.exports=s.p+"99f40d0192548aab4f66.png"},3469:(t,e,s)=>{"use strict";t.exports=s.p+"cd1a84febeaacb1c746d.png"},2720:(t,e,s)=>{"use strict";t.exports=s.p+"3418bc8186869e9a19a6.png"},9107:(t,e,s)=>{"use strict";t.exports=s.p+"2e367f8e756e5d29f65f.png"},4134:(t,e,s)=>{"use strict";t.exports=s.p+"732e76e1c84d10b7c99c.png"},355:(t,e,s)=>{"use strict";t.exports=s.p+"eb4af83d07820cd3c0c3.png"},8588:(t,e,s)=>{"use strict";t.exports=s.p+"a0939cb0d2566feeb136.png"},1318:(t,e,s)=>{"use strict";t.exports=s.p+"92a711e8a9a689473043.png"},1152:(t,e,s)=>{"use strict";t.exports=s.p+"dd9ce7a41ecec10100a0.png"},9511:(t,e,s)=>{"use strict";t.exports=s.p+"64b226a36b417635df42.png"},4026:(t,e,s)=>{"use strict";t.exports=s.p+"88a1d17e9f0c0f6f15a7.png"},2961:(t,e,s)=>{"use strict";t.exports=s.p+"5a50c9264e45289894d5.png"},1597:(t,e,s)=>{"use strict";t.exports=s.p+"7e95e1205d339717ecec.png"},2801:(t,e,s)=>{"use strict";t.exports=s.p+"ddd98b71e29372f843a8.png"},6293:(t,e,s)=>{"use strict";t.exports=s.p+"4aa304c71a7ade9f962c.png"},2525:(t,e,s)=>{"use strict";t.exports=s.p+"879be3b90b72d79ccfe6.png"},4117:(t,e,s)=>{"use strict";t.exports=s.p+"2eda49658721dc776c0c.png"},2270:(t,e,s)=>{"use strict";t.exports=s.p+"f937ebd68b675047bec7.png"}},t=>{"use strict";t.O(0,[216],(()=>(647,t(t.s=647)))),t.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,